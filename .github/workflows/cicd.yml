on:
  push:
    branches:
      - 'main'
name: deploy
env:
  REGISTRY: docker.pkg.github.com
  IMAGE_NAME: daka22/portafolio/portafolio
  # REPO_NAME: ${{ github.event.repository.name }}
  IMAGE_NAME_DOCKERHUB: daka27/portafolio
jobs:
  build-and-push-github-registry:
    name: build and push image GitHub Registry
    runs-on: ubuntu-latest
    steps:
      -
        name: chekout
        uses: actions/checkout@v2
      -
        name: Login to github registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}
      -
        name: Build and push github registry
        uses: docker/build-push-action@v3
        with:
          push: true

          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}

  build-and-push-dockerhub:
    name: build and push image DockerHub
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to DOCKERHUB
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push DOCKERHUB
        uses: docker/build-push-action@v3
        with:
          push: true

          tags: ${{ env.IMAGE_NAME_DOCKERHUB }}:latest,${{ env.IMAGE_NAME_DOCKERHUB}}:${{ github.sha }},${{ env.IMAGE_NAME_DOCKERHUB}}:${{ github.run_number }}


  deploy-to-cluster:
    name: deploy to cluster
    runs-on: ubuntu-latest
    needs: build-and-push-dockerhub
    steps:
    - name: deploy to cluster
      uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: set image --record deployment/my-app prueba-gha=${{ env.IMAGE_NAME_DOCKERHUB }}:${{ github.sha }}
    - name: verify deployment
      uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        KUBECTL_VERSION: "1.20"
      with:
        args: '"rollout status deployment/my-app"'
  # ngrok-watcher:
    # name: Ngrok watcher
    # runs-on: ubuntu-latest
    # needs: deploy-to-cluster
    # steps:
    # - name: Get ngrok URL
    #   id: getNgrokUrl
    #   uses: debianmaster/kubectl@master
    #   env:
    #     KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
    #     KUBECTL_VERSION: "1.20"
    #   with:
    #     args: |
    #       URL=`kubectl -n prueba get ngrok -o=custom-columns='DATA:status.url' | tail -n1`
    #       echo "::set-output name=url::$URL"
    # - name: Check if URL is valid
    #   uses: ubuntu-latest
    #   run: |
    #     echo "URL is: ${{ steps.getNgrokUrl.outputs.url }}"
      # - name: Watch ngrok
      # uses: steebchen/kubectl@master
      # env:
      #   KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      #   KUBECTL_VERSION: "1.20"
      # run: echo "Hello world"
      # # with:
      # #   args: '"rollout status deployment/my-app"'
