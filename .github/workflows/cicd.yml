on:
  push:
    branches:
      - 'main'
name: deploy

env:
  REGISTRY: docker.pkg.github.com
  # IMAGE_NAME: ${{ github.repository }}
  IMAGE_NAME: daka22/portafolio


jobs:
  build-and-push:
    name: build and push image
    runs-on: ubuntu-latest
    steps:
      -
        name: chekout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to github registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true

          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}
          # tags: ${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}
    # - uses: actions/checkout@master
    # - name: build and push to docker github
    #   uses: docker/build-push-action@v2
    #   with:
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.TOKEN }}
    #     registry: docker.pkg.github.com
    #     repository: ${{ github.repository }}/cicd
        # tag_with_ref: true
        # tag_with_sha: true
        # tags: ${{ github.sha }}
        # tags: latest,${{ github.run_number }}
      # with:
      #   username: ${{ secrets.DOCKER_USERNAME }}
      #   password: ${{ secrets.DOCKER_PASSWORD }}
      #   # repository: ${{ github.repository }}
      #   repository: 'portafolio'
      #   tag_with_ref: true
      #   tag_with_sha: true
      #   tags: ${{ github.sha }}


  # deploy-to-cluster:
  #   name: deploy to cluster
  #   runs-on: ubuntu-latest
  #   needs: build-and-push
  #   steps:
  #   - name: deploy to cluster
  #     uses: steebchen/kubectl@master
  #     env:
  #       KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  #     with:
  #       args: set image --record deployment/my-app prueba-gha=${{ github.repository }}:${{ github.sha }}
  #   - name: verify deployment
  #     uses: steebchen/kubectl@master
  #     env:
  #       KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  #       KUBECTL_VERSION: "1.20"
  #     with:
  #       args: '"rollout status deployment/my-app"'
  # ngrok-watcher:
    # name: Ngrok watcher
    # runs-on: ubuntu-latest
    # needs: deploy-to-cluster
    # steps:
    # - name: Get ngrok URL
    #   id: getNgrokUrl
    #   uses: debianmaster/kubectl@master
    #   env:
    #     KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
    #     KUBECTL_VERSION: "1.20"
    #   with:
    #     args: |
    #       URL=`kubectl -n prueba get ngrok -o=custom-columns='DATA:status.url' | tail -n1`
    #       echo "::set-output name=url::$URL"
    # - name: Check if URL is valid
    #   uses: ubuntu-latest
    #   run: |
    #     echo "URL is: ${{ steps.getNgrokUrl.outputs.url }}"
      # - name: Watch ngrok
      # uses: steebchen/kubectl@master
      # env:
      #   KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      #   KUBECTL_VERSION: "1.20"
      # run: echo "Hello world"
      # # with:
      # #   args: '"rollout status deployment/my-app"'
